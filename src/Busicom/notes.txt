CPU speed 10.8 or 21.6 us per instruction (clock 740 kHz)

Symbols
-------
character	4-bit nibble
add		addition
sub		subtraction
div		division
mul		multiplication
mov		move

ACC		i4004 accumulator
BPC		basic pseudo code
CY		i4004 carry flag
CR		constant register
DP		decimal point
DR		dividend register
IR		indirect register
KR		keyboard buffer register
M0..M15		main memory cells 0..15
MR		memory register
NR		number register
R0..R15		i4004 register
RR		result register
QPC		square root pseudo code
S0..S3		status character 0..3
SQRT		square root
SR		sub total register
TR		main total register
WR		working register

Ports
-----
TEST		printer drum sector signal (= row of digits, 0=active, 1=inactive)

ROM0 out	bit0 keyboard matrix column shifter clock (10 bits; 1=start write pulse, 0=stop write pulse)
		bit1 shifter data (for printer and keyboard shifter; keyboard 0=row selected, printer 1=hammer is selected)
		bit2 printer shifter clock (20 bits; 1=start write pulse, 0=stop write pulse)

ROM1 in		bit0..bit3 keyboard matrix rows input (1=column is active, key is pressed)

ROM2 in		bit0 printer drum index signal input (1=active, 0=inactive)
		bit3 printer paper advancing button input (1=button is pressed)

RAM0 out	bit0 printing color (0=black, 1=red)
		bit1 fire print hammers (1=fire hammers)
		bit3 advance printer paper (1=paper is advancing)

RAM1 out	bit0 memory lamp
		bit1 overflow lamp
		bit2 minus sign lamp

Keyboard
--------
Select row0..9 via shifter (ROM0 bit0 clock, ROM0 bit1 data) and read col0..3 (RIM1 bit0..3).

		col0		col1		col2		col3
row0		CM (81)		RM (82)		M- (83)		M+ (84)
row1		SQRT (85)	% (86)		M=- (87)	M=+ (88)
row2		diamond (89)	/ (8A)		* (8B)		= (8C)
row3		- (8D)		+ (8E)		diamond2 (8F)	000 (90)
row4		9 (91)		6 (92)		3 (93)		. (94)
row5		8 (95)		5 (96)		2 (97)		00 (98)
row6		7 (99)		4 (9A)		1 (9B)		0 (9C)
row7		sign (9D)	EX (9E)		CE (9F)		C (A0)
row8		dp0		dp1		dp2		dp3	(decimal point switch, value 0,1,2,3,4,5,6,8)
row9		sw1						sw2	(rounding switch, value 0,1,8)

Printer
-------
Rotating printer drum contains 18 columns with 13 sectors (13 rows = 13 digits), column 16 is empty.
Wait index signal (=sector 0, ROM2 bit0), count sector signals (TEST), output hammer pattern (ROM0 bit1 data, ROM0 bit2 clock),
fire hammers (RAM0 bit1), shift paper (RAM0 bit3). Sector signal (TEST) 28 ms (35.7 Hz), index signal 13*28 = 364 ms (2.74 Hz).
Shifter bits: bit0 = column 17, bit1 = column 18, bit3..bit17 = column 1..15 (order of send digits: M0..M14, skip, col18, col17).

sector		column 1-15	column 17	column 18
0		0		diamond		#
1		1		+		*
2		2		-		I
3		3		X		II
4		4		/		III
5		5		M+		M+
6		6		M-		M-
7		7		^		T
8		8		=		K
9		9		SQRT		E
10		.		%		Ex
11		.		C		C
12		-		R		M

Number registers
----------------
1 number register = 16 characters (M0..M15) + 4 status character (S0..S3)
Calculator uses 2 RAM chips. 1 RAM chip = 4 number registers. Total 8 number registers.

S0: 0 plus, 1 or 15 minus
S1: decimal point position (number of digits behind decimal point)
Digits are adjustes starting with lowest digit value at M0.

Number -75.43:
  M0 M1 M2 M3 M4 M5 M6 M7 M8 M9 M10 M11 M12 M13 M14 M15  S0 S1 S2 S3
  3  4  5  7  0  0  0  0  0  0   0   0   0   0   0   0   15  2 

NR(0)	KR	keyboard register (keyboard buffer); S0=keyboard buffer pointer, S3=status (0 no button, 15 pressed)
NR(1)	WR	working register (input register, 2nd operand); S2=rounding switch (0=float, 1=round, 8=trunc), S3=dec. point switch (0..8)
NR(2)	DR	dividend register (1st operand of mul/div); S2=status (0 no mul/div, 3 mul, 4 div, 8 def. div CR, B mul CR, C div CR)
NR(3)	RR	result register (temporary register); S2=last operation (0 new number, 1 mul/div, 8 add/sub)
NR(4)	CR	constant register; S2=digit entry mode status (0 no decimal point, 1 digit with DP, 8 digit without DP)
NR(5)	SR	sub total register (1st operand of add/sub); S2=overflow status (1 overflow)
NR(6)	TR	main total register (1st operand of add/sub)
NR(7)	MR	memory register
